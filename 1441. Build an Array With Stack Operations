/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
char** buildArray(int* target, int targetSize, int n, int* returnSize) {
    char** res = (char**)malloc(sizeof(char*) * (n * 2)); // Allocate memory for res array

    int cur = 1;
    int i = 0;
    int k = 0;

    for (int j = 1; j <= n; j++) { // Adjusted loop control
        if (cur == target[k]) {
            res[i] = (char*)malloc(sizeof(char) * 5); // Allocate memory for "Push"
            strcpy(res[i++], "Push");
            cur = cur + 1;
            k++;

            if (k == targetSize) break; // Break if target is achieved
        } else {
            res[i] = (char*)malloc(sizeof(char) * 5); // Allocate memory for "Push" and "Pop"
            strcpy(res[i++], "Push");
            res[i] = (char*)malloc(sizeof(char) * 4);
            strcpy(res[i++], "Pop");
            cur = cur + 1;
        }
    }

    *returnSize = i;
    return res;
}
